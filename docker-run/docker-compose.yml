# Use root/example as user/password credentials
version: "3.1"

# 给zk集群配置一个网络，网络名为zk-net
networks:
  zk-net:
    name: zk-net


services:
  mysql:
    restart: always
    image: mysql
    container_name: mysql
    environment:
      - MYSQL_PORT=3306
    ports:
      - "3306:3306"
    volumes:
      - D:\Software\docker\mysql\data:/var/lib/mysql
      - D:\Software\docker\mysql\conf\mysql.conf:/etc/mysql/mysql.conf.d/mysql.conf
      - D:\Software\docker\mysql\log:/var/log/mysql
      - D:\Software\docker\mysql\mysql-files:/var/lib/mysql-files/

  nacos:
    image: nacos/nacos-server
    container_name: nacos
    environment:
      - PREFER_HOST_MODE=hostname
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=mysql
      - MYSQL_SERVICE_HOST=mysql
      - MYSQL_SERVICE_DB_NAME=nacos_config
      - MYSQL_SERVICE_PORT=3306
      - MYSQL_SERVICE_USER=root
      - MYSQL_SERVICE_PASSWORD=123456
      - NACOS_APPLICATION_PORT=8848
      - JVM_XMS=512m
      - JVM_MMS=320m
    volumes:
      - D:\Software\docker\nacos\standalone-logs/:/home/nacos/logs
      - D:\Software\docker\nacos\plugins/:/home/nacos/plugins
    ports:
      - "8848:8848"
      - "8849:8849"
      - "9848:9848"
      - "9849:9849"
    expose:
      - 8848
      - 8849
      - 9848
      - 9849
    depends_on:
      - mysql
    restart: always

  #redis容器
  redis:
    #定义主机名
    container_name: redis
    #使用的镜像
    image: redis
    #容器的映射端口
    ports:
      - 6380:6379
    command: redis-server /etc/conf/redis.conf
    #定义挂载点
    volumes:
      - D:\Software\docker\redis\data:/data
      - D:\Software\docker\redis\conf\redis.conf:/etc/conf/redis.conf
    #环境变量
    privileged: true
    environment:
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8

  # 网关
  api:
    image: panda-gateway-cloud
    network_mode: host
    container_name: api
    ports:
      - 8080:8080

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    volumes:
      - D:\Software\docker\elasticsearch\plugins:/usr/share/elasticsearch/plugins
      - D:\Software\docker\elasticsearch\config\elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - cluster.name=${CLUSTER_NAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
  #    volumes:
  #      - D:\Software\docker\kibana\config\kibana.yml:/usr/share/kibana/config/kibana.yml
  #      - D:\Software\docker\kibana\data:/usr/share/kibana/data
  #      - D:\Software\docker\kibana\logs:/usr/share/kibana/logs
  #    environment:
  #      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200/
  #      - ELASTICSEARCH_USERNAME=kibana_system
  #      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}

  dubbo-admin:
    image: apache/dubbo-admin
    hostname: dubbo-admin
    container_name: dubbo-admin
    ports:
      - 8080:8080
    networks:
      - zk-net
    environment:
      - admin.registry.address=zookeeper://zk1:2181, zk2:2181, zk3:2181
      - admin.config-center=zookeeper://zk1:2181, zk2:2181, zk3:2181
      - admin.metadata-report.address=zookeeper://zk1:2181, zk2:2181, zk3:2181

  zk1:
    # docker container所使用的docker image
    image: zookeeper
    hostname: zk1
    container_name: zk1
    # 配置docker container和宿主机的端口映射
    ports:
      - 2181:2181
    #      - 8081:8080
    # 配置docker container的环境变量
    environment:
      # 当前zk实例的id
      ZOO_MY_ID: 1
      # 整个zk集群的机器、端口列表
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=zk3:2888:3888;2181
    #      ZOO_SERVERS: server.1=0.0.0.0:2888:3888
    # 将docker container上的路径挂载到宿主机上 实现宿主机和docker container的数据共享
    volumes:
      - D:\Software\docker\zookeeper\zk1\data:/data
      - D:\Software\docker\zookeeper\zk1\datalog:/datalog
      - D:\Software\IDE\apache-zookeeper-3.8.0\conf\zoo_sample.cfg:/conf/zoo.cfg
    # 当前docker container加入名为zk-net的隔离网络
    networks:
      - zk-net

  zk2:
    image: zookeeper
    hostname: zk2
    container_name: zk2
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zk3:2888:3888;2181
    volumes:
      - D:\Software\docker\zookeeper\zk2\data:/data
      - D:\Software\docker\zookeeper\zk2\datalog:/datalog
      - D:\Software\IDE\apache-zookeeper-3.8.0\conf\zoo_sample.cfg:/conf/zoo.cfg
    networks:
      - zk-net

  zk3:
    image: zookeeper
    hostname: zk3
    container_name: zk3
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zk1:2888:3888;2181 server.2=zk2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181
    volumes:
      - D:\Software\docker\zookeeper\zk3\data:/data
      - D:\Software\docker\zookeeper\zk3\datalog:/datalog
      - D:\Software\IDE\apache-zookeeper-3.8.0\conf\zoo_sample.cfg:/conf/zoo.cfg
    networks:
      - zk-net