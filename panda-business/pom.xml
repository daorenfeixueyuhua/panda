<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>panda</artifactId>
        <groupId>com.daoren</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>panda-business</artifactId>
    <packaging>pom</packaging>
    <modules>
        <module>panda-business-test</module>
        <module>panda-business-user</module>
        <module>panda-business-file</module>
        <module>panda-selenium-business</module>
        <module>panda-business-acm</module>
        <module>panda-business-graphql</module>
        <module>panda-business-camunda</module>
        <module>panda-business-es</module>
        <module>panda-business-dbagent</module>
        <module>panda-business-hello</module>
        <module>panda-business-hbase</module>
        <module>panda-business-dubbo-test</module>
        <module>panda-business-dynamic</module>
        <module>panda-business-mongodb</module>
        <module>panda-business-mybatis-demo</module>
        <module>panda-business-mybatis-spring-demo</module>
        <module>panda-business-spring-ioc</module>
        <module>panda-business-spring-security</module>
        <module>panda-business-spring-boot</module>
        <module>panda-business-junit-demo</module>
        <module>panda-business-jetty-demo</module>
        <module>panda-business-tomcat-demo</module>
        <module>panda-business-nginx-demo</module>
        <module>panda-business-mysql-cluster-demo</module>
        <module>panda-business-transactional-demo</module>
        <module>panda-business-okhttp-demo</module>
        <module>panda-business-httpclient-demo</module>
        <module>panda-business-rabbit-provider</module>
        <module>panda-business-rabbit-consumer</module>
        <module>panda-business-easy-rules</module>
        <module>panda-business-acm/panda-business-drools</module>
        <module>panda-business-fop</module>
        <module>panda-business-rocketmq-boot-demo</module>
        <module>panda-business-seata-demo</module>
        <module>panda-business-nacos-demo</module>
    </modules>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <mainClass>none</mainClass>
    </properties>
    <build>
        <finalName>${project.name}</finalName>
        <pluginManagement>
            <plugins>
                <!-- 指定启动类，将依赖打成外部jar包 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <manifest>
                                <!-- 是否要把第三方jar加入到类构建路径 -->
                                <addClasspath>true</addClasspath>
                                <!-- 外部依赖jar包的最终位置 -->
                                <!-- 因为我们将第三方jar和本项目jar放在同一个目录下，这里就使用./ -->
                                <classpathPrefix>./</classpathPrefix>
                                <!-- 项目启动类 -->
                                <!--                                <mainClass>com.daoren.test.TestApplication</mainClass>-->
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <!--主要使用的是maven提供的assembly插件完成-->
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                    <configuration>
                        <descriptors>
                            <!--具体的配置文件-->
                            <descriptor>src/main/assembly/assembly.xml</descriptor>
                        </descriptors>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-assembly</id>
                            <!--绑定到maven操作类型上-->
                            <phase>package</phase>
                            <!--运行一次-->
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-maven-plugin.version}</version>
                <configuration>
                    <mainClass>${mainClass}</mainClass>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--docker配置-->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-maven-plugin.version}</version>
                <configuration>
                    <!--<dockerHost>http://192.168.248.135:2376</dockerHost>-->
                    <imageName>${project.artifactId}</imageName>
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>